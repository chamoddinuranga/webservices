name: CI/CD Pipeline

# Trigger the workflow on every push to the main branch
on:
  push:
    branches:
      - main

# Define the jobs in the workflow
jobs:
  build:
    # Job runs on the latest Ubuntu environment
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker in the environment
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub using secrets (optional, if you want to push to Docker Hub)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build user-service Docker image
      - name: Build User Service Docker image
        run: docker build -t user-service:latest ./user-service

      # Build price-service Docker image
      - name: Build Price Service Docker image
        run: docker build -t price-service:latest ./price-service

      # Push built images to Docker Hub (optional)
      - name: Push User Service to Docker Hub
        run: docker push user-service:latest

      - name: Push Price Service to Docker Hub
        run: docker push price-service:latest

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Run tests for user-service
      - name: Test User Service
        run: |
          docker build -t user-service ./user-service
          docker run user-service pytest ./tests

      # Run tests for price-service
      - name: Test Price Service
        run: |
          docker build -t price-service ./price-service
          docker run price-service pytest ./tests

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up kubectl for deployment
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.19.0'

      # Authenticate to the Kubernetes cluster (you'll need to store kubeconfig as a secret)
      - name: Authenticate to K8s Cluster
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      # Apply Kubernetes manifests
      - name: Deploy services to Kubernetes
        run: |
          kubectl apply -f ./kubernetes/user-service-deployment.yaml
          kubectl apply -f ./kubernetes/price-service-deployment.yaml
          kubectl apply -f ./database/db-deployment.yaml
          kubectl apply -f ./kubernetes/persistent-volume.yaml
